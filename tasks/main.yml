---
- name: Create service account for Spark
  user: name=spark
        system=yes
        home={{ spark_lib_dir }}
        shell=/bin/false
        state=present

- name: Ensure Spark configuration directory exists
  file: path="{{ spark_conf_dir }}"
        state=directory

- name: Ensure Spark log and run directories exist
  file: path="{{ item }}"
        owner=spark
        group=spark
        mode=0755
        state=directory
  with_items:
    - "{{ spark_log_dir }}"
    - "{{ spark_run_dir }}"

- name: Download Spark distribution
  get_url: url="{{ spark_mirror }}/spark-{{ spark_version }}.tgz"
           dest="/usr/local/src/spark-{{ spark_version }}.tgz"

- name: Extract Spark distribution
  unarchive: src="/usr/local/src/spark-{{ spark_version }}.tgz"
             dest="/usr/lib"
             copy=no
             creates="/usr/lib/spark-{{ spark_version }}"
  notify: 
    - "Restart Spark {{ spark_role }}"

- name: Setup Spark distribution symlinks
  file: src="{{ item.src }}"
        dest="{{ item.dest }}"
        state=link
  with_items:
    - { src: "/usr/lib/spark-{{ spark_version }}", dest: "{{ spark_usr_dir }}" }
    - { src: "/usr/lib/spark/conf", dest: "{{ spark_conf_dir }}/conf" }

- name: Create shims for Spark binaries
  template: src=spark-shim.j2
            dest="/usr/bin/{{ item }}"
            mode=0755
  with_items:
    - spark-class
    - spark-shell
    - spark-sql
    - spark-submit
    - sparkR

- name: Configure Spark environment
  template: src=spark-env.sh.j2
            dest="{{ spark_conf_dir }}/conf/spark-env.sh"
  notify: 
    - "Restart Spark {{ spark_role }}"

- name: "Install Spark {{ spark_role }} Service"
  template:
    src: "spark-{{ spark_role }}.service.j2"
    dest: "/etc/systemd/system/spark-{{ spark_role }}.service"
  notify:
    - Reload systemd
    - "Restart Spark {{ spark_role }}"
  when: spark_role